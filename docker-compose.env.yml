version: '3.3'
services:
  web:
    image: dtr.${DOCKER_DOMAIN}/${DTR_ORG_NAME}/${DTR_REPO_NAME}:${BUILD_SOURCEVERSION}
    ports:
      - "3100"
    environment:
      - APP_NAME=${APP_NAME}
      - BRAND_NAME=${BRAND_NAME}
      - NODE_ENV=${NODE_ENV}
    labels:
      com.docker.ucp.mesh.http: "true"
    networks:
      default:
      traefik:
    deploy:
      placement:
        constraints:
         - node.platform.os == linux
      resources:
        limits:
          cpus: ${MAX_CPU}
          memory: ${MAX_MEM}
        reservations:
          cpus: ${MIN_CPU}
          memory: ${MIN_MEM}
      labels:
        com.docker.ucp.access.label: ${DDC_COLLECTION}
        traefik.tags: ${TRAEFIK_TAGS}
        traefik.enable: "true"
        traefik.port: ${TRAEFIK_PORT}
        traefik.docker.network: ${TRAEFIK_NETWORK}
        traefik.backend: ${TRAEFIK_BACKEND}
        traefik.frontend.rule: Host:${TRAEFIK_FRONTEND_HOST}
        traefik.backend.loadbalancer.method: drr
        com.visualstudio.mrcooper.release-definition: ${RELEASE_DEFINITIONNAME}
        com.visualstudio.mrcooper.release-environment: ${RELEASE_ENVIRONMENTNAME}
        com.visualstudio.mrcooper.release-name: ${RELEASE_RELEASENAME}
      replicas: 3
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
networks:
  default:
  traefik:
    external:
      name: ${TRAEFIK_NETWORK}
